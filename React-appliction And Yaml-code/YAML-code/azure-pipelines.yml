parameters:
  - name: Abcd
    type: string
    default: refs/heads/DEV
    values:
      - refs/heads/DEV
      - refs/heads/QA
      - refs/heads/PROD

resources:
   repositories: 
   - repository: React-application
     type: git
     name: Malik/React-application
     ref: ${{parameters.Abcd}}

trigger:  none
pool:
  vmImage: 'ubuntu-latest'
stages:
  - template: build.yaml

  - stage: Deploy
    displayName: Build and Test
    jobs:
    - job: Deploy
      displayName: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - template: task-downloadbuild-artifact.yaml
      - task: AzureRmWebAppDeployment@4
        displayName: 'Dev-for-Reat'
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'app-service-connection'
          appType: 'webAppLinux'
          WebAppName: 'Dev-for-React'
          packageForLinux: '$(System.DefaultWorkingDirectory)/drop/*.zip'
          RuntimeStack: 'NODE|16-lts'
          StartupCommand: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
      - task: AzureRmWebAppDeployment@4
        displayName: 'QA-for-Reat'
        inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'app-service-connection'
              appType: 'webAppLinux'
              WebAppName: 'QA-for-React'
              packageForLinux: '$(System.DefaultWorkingDirectory)/drop/*.zip'
              RuntimeStack: 'NODE|16-lts'
              StartupCommand: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
      - task: AzureRmWebAppDeployment@4
        displayName: 'Prod-for-Reat'
        inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'app-service-connection'
            appType: 'webAppLinux'
            WebAppName: 'Prod-for-React'
            packageForLinux: '$(System.DefaultWorkingDirectory)/drop/*.zip'
            RuntimeStack: 'NODE|16-lts'
            StartupCommand: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
